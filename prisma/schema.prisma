datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Fields for OAuth providers
  googleId String? @unique

  // Relations to agents
  agents Agent[]
}

model Agent {
  id          Int      @id @default(autoincrement())
  name        String
  role        String
  tone        String?
  description String?
  status      String   @default("active")
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  activities     Activity[]     @relation("AgentActivities")
  chatActivities ChatActivity[] @relation("AgentChatActivities")
}

model Activity {
  id        String   @id @default(uuid())
  prompt    String?
  input     String
  output    String
  result    Boolean
  timestamp DateTime @default(now())

  // Relations
  agentId Int
  agent   Agent @relation("AgentActivities", fields: [agentId], references: [id], onDelete: Cascade)

  chatActivityId String?       @unique
  chatActivity   ChatActivity? @relation(fields: [chatActivityId], references: [id], onDelete: SetNull)
}

model ChatActivity {
  id        String   @id @default(uuid())
  prompt    String?
  input     String
  output    String
  approved  Boolean?
  rejected  Boolean?
  timestamp DateTime @default(now())

  // Relations
  agentId Int
  agent   Agent @relation("AgentChatActivities", fields: [agentId], references: [id], onDelete: Cascade)

  activities Activity[]
}
